#!/bin/bash
set -ux
rev=$1
ref=$2
email=$3
github_token="$GITHUB_API_TOKEN"
url_base=http://$EXTERNAL_HOSTNAME
repo=$REPO
host=$(hostname)
build_url=""
cd /var/ci
postmark_token="$POSTMARK_API_TOKEN"

# hack hack hack
email="${email/mail@jonasschneider.com/js.sokrates@gmail.com}"

email="${email/@/+continuum@}"

update_status() {
  echo "status: $1"
  curl -g -H "Authorization: token "$github_token -X  POST -H "Content-Type: application/json" \
    -d '{"state":"'$1'","description":"'"$2"' ('$host')","target_url":"'$build_url'"}' \
    https://api.github.com/repos/$repo/statuses/$rev
}
log=$(mktemp)

email() {
  to=$1
  subject=$2
  body_filename=$3
  body_tmpfile=$(mktemp)
  echo -n "{From: 'mail@jonasschneider.com', To: '"$to"', Subject: '""$subject""', TextBody:\"" >> $body_tmpfile
  cat $body_filename | sed 's/\\/\\\\/g' | sed 's/"/\\"/g' | tr '\n' '\t' | sed 's/\t/\\n/g' >> $body_tmpfile
  echo -n "\"}" >> $body_tmpfile
  cp $body_tmpfile tmpbody
  curl -g -X POST "http://api.postmarkapp.com/email" \
  -H "Accept: application/json" \
  -H "Content-Type: application/json" \
  -H "X-Postmark-Server-Token: $postmark_token" \
  -d @$body_tmpfile
}
update_status "pending" "Queued..."
(
  flock -x 200
  update_status "pending" "Building..."

  /build $rev |& tee $log
  status=${PIPESTATUS[0]}

  if [ $status -ne 0 ]
  then
    build_url="$url_base/builds/$(cat last_build)?secret=$GITHUB_SHARED_SECRET"
    update_status "failure" "Build failed"
    pretty_log=$(mktemp)
    echo "Build failed at `date`. Last 15 lines of log:" >> $pretty_log
    echo >> $pretty_log
    tail -n 15 $log >> $pretty_log
    echo >> $pretty_log
    echo >> $pretty_log
    echo >> $pretty_log
    echo "Full log:" >> $pretty_log
    echo >> $pretty_log
    cat $log >> $pretty_log
    email $email "[$repo ${ref/refs\/heads\//}] Build $rev failed" $pretty_log
  else
    build_url="$url_base/builds/$(cat last_build)?secret=$GITHUB_SHARED_SECRET"
    update_status "success" "Build succeeded"
  fi
  mv $log log/$(cat last_build)
) 200> run.lock
